-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2016.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity mnist_ip2Weights_rom is 
    generic(
             dwidth     : integer := 32; 
             awidth     : integer := 9; 
             mem_size    : integer := 300
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of mnist_ip2Weights_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "10111100000100010111010000001101", 
    1 => "00111110011111110010011010111001", 
    2 => "10111110010111101101010100101110", 
    3 => "00111110011011010100000111001011", 
    4 => "00111110100010000101101111101111", 
    5 => "10111110101101110110111110011001", 
    6 => "00111101111001000100000111001100", 
    7 => "10111110010111000110011000111101", 
    8 => "00111101110111101111110100010011", 
    9 => "00111110101010000111111010001101", 
    10 => "00111110011001001011010110100010", 
    11 => "00111110010101100001101010110111", 
    12 => "10111101111001000010100011010110", 
    13 => "10111101010111000111011000101000", 
    14 => "10111110101010100010111010000101", 
    15 => "10111110010001000010010111011100", 
    16 => "10111110000111000000110101110110", 
    17 => "00111101010000100011001011000010", 
    18 => "10111110011000001001110111110111", 
    19 => "10111101101011110001010010011101", 
    20 => "10111110001001100110111001111011", 
    21 => "10111110000000011101010111101100", 
    22 => "00111110101110110111100111100010", 
    23 => "10111110110011100101101110001000", 
    24 => "10111110111100101001000111111001", 
    25 => "10111110101001111011101000101010", 
    26 => "00111111000011011100011111010110", 
    27 => "10111110101110011001111000110110", 
    28 => "00111110011110111101001110101011", 
    29 => "10111101011110001111011110001111", 
    30 => "10111110101011010100010010110110", 
    31 => "10111110101010010100110001111101", 
    32 => "10111101101000000010001110011001", 
    33 => "10111110001011111000011001111110", 
    34 => "00111110100001000000100101001111", 
    35 => "00111110010000000101001010100001", 
    36 => "10111110100010111110111101000000", 
    37 => "00111101101100100000100111111100", 
    38 => "00111100011011111010100100100101", 
    39 => "10111110101101111000000110011100", 
    40 => "00111110011100101101011100000110", 
    41 => "10111100101101001010001011011100", 
    42 => "10111001001101100101011111110100", 
    43 => "10111101111000000010111110110101", 
    44 => "00111110000011000011101111001101", 
    45 => "00111110101010010001011001100001", 
    46 => "00111100100101100110101111111110", 
    47 => "00111110111001100101110100111101", 
    48 => "00111110100111111101101000010111", 
    49 => "00111110110011000100111001100001", 
    50 => "00111111001111110110011111111011", 
    51 => "10111110110011010111100000101100", 
    52 => "00111101101000101110101101100110", 
    53 => "00111101100010001110100000111000", 
    54 => "10111111000001110101101100101101", 
    55 => "00111100110100111100100101000001", 
    56 => "00111110010100010101010001010010", 
    57 => "10111100000110000111101100010100", 
    58 => "00111101101111011011111010000111", 
    59 => "10111101001001111110011011000011", 
    60 => "10111110101000110000010001001010", 
    61 => "00111110111001000101001001010011", 
    62 => "00111101011011010100001101011111", 
    63 => "00111100110110110001011001111111", 
    64 => "10111110100111111100110101001011", 
    65 => "00111100111010001001111111101001", 
    66 => "00111110100011010100001011101101", 
    67 => "10111110100101001011110110011110", 
    68 => "00111100100010110110111001101000", 
    69 => "10111110100000010111001000111100", 
    70 => "00111110111000011110100000110001", 
    71 => "10111101101011011001001000000110", 
    72 => "00111110111110010010100011110001", 
    73 => "10111110001011111110110010100111", 
    74 => "00111110010000100001100101100101", 
    75 => "10111100110100110001101001100001", 
    76 => "10111100111011001100101001111110", 
    77 => "10111110000000000111001101101110", 
    78 => "00111110011001010100100000000101", 
    79 => "10111110011110011011100111100001", 
    80 => "00111110011000111001110100100110", 
    81 => "10111101101010101110010111110110", 
    82 => "00111101010100101011001000001001", 
    83 => "00111110011110001111110001001010", 
    84 => "10111110010001111101011111101010", 
    85 => "10111110001100101010011110001101", 
    86 => "10111110100011010101111100000110", 
    87 => "10111101000110000111111111111100", 
    88 => "00111111000110110001111111000000", 
    89 => "10111110010000110111001010000111", 
    90 => "00111110001010100110110110111100", 
    91 => "00111110000101011100011100100001", 
    92 => "10111111000000001000001010011000", 
    93 => "00111110010010000001101110000111", 
    94 => "00111110100000001000101001111100", 
    95 => "10111110000000101000111100111000", 
    96 => "10111110000011010011000010110101", 
    97 => "10111110000001010101110100111101", 
    98 => "00111110111011100001101011100001", 
    99 => "10111111000011010110111011111110", 
    100 => "00111101110010001100111011100011", 
    101 => "00111110101000110101011110000100", 
    102 => "00111110011001100111100111100010", 
    103 => "00111111000011101000101011111110", 
    104 => "00111101101001010000011010011111", 
    105 => "00111101100000110110100000111110", 
    106 => "00111110011010000101011000101001", 
    107 => "10111110100101110011011101001010", 
    108 => "00111101110101011001110100001111", 
    109 => "00111110001100001110010110011100", 
    110 => "10111101001110111010000010110011", 
    111 => "00111100011111110111011001111000", 
    112 => "10111110000110110011011011011110", 
    113 => "10111101011101011010110000101111", 
    114 => "00111110100001110110001011111011", 
    115 => "10111110111001101110000101111001", 
    116 => "10111100111011011011011100101111", 
    117 => "10111100101001101111101101111110", 
    118 => "10111110011010111111011100001011", 
    119 => "00111101001010000011111011111110", 
    120 => "00111101111011101100011000101010", 
    121 => "10111101101101110111011010111110", 
    122 => "00111110110111001111110011000101", 
    123 => "10111101010000010000000011100100", 
    124 => "00111100010011000010010010101101", 
    125 => "10111101100100010010001101100100", 
    126 => "10111110010111101100111101011010", 
    127 => "10111101010110010111000100101100", 
    128 => "00111101111001110001000110000001", 
    129 => "00111101100010001110001011001000", 
    130 => "10111101111101010101100111001011", 
    131 => "00111110001011110000110100010001", 
    132 => "10111101110010000000111110000110", 
    133 => "10111101101000110110001000101101", 
    134 => "10111110000100010001000110001000", 
    135 => "10111110000111111011100111011001", 
    136 => "00111110111010010001010111011111", 
    137 => "10111110100011110101010111001010", 
    138 => "00111101101010110101011001000011", 
    139 => "10111110100011011110010001010101", 
    140 => "00111101010110011101000011001110", 
    141 => "10111110000101111000100110110000", 
    142 => "00111101111101111010001000000011", 
    143 => "00111110110011110111010101011011", 
    144 => "10111101011011011001100100101110", 
    145 => "00111110110000010011000000011101", 
    146 => "00111110000001100000000110111011", 
    147 => "00111101101010000011110001111101", 
    148 => "10111110101111101110110000101011", 
    149 => "10111110100100110000111010010011", 
    150 => "00111100001000111110001001101101", 
    151 => "10111110011100100011000100101100", 
    152 => "10111110110010101000011011110011", 
    153 => "00111110010110010000010001101110", 
    154 => "00111110101101010101000100100101", 
    155 => "00111110100001101011001100000010", 
    156 => "10111101101110110111010110111101", 
    157 => "10111110100111010001001110010001", 
    158 => "10111101101001110111100111110101", 
    159 => "00111100010111100001001000110011", 
    160 => "10111110011111010010010011010011", 
    161 => "00111110110001010111101000000110", 
    162 => "10111110001001000110001010101000", 
    163 => "00111110011111010000000011100010", 
    164 => "00111101110101000111100000010000", 
    165 => "00111100110000001011101001011110", 
    166 => "10111110110110011110001001011011", 
    167 => "10111110100010100100011111101110", 
    168 => "10111110100010011001010111011110", 
    169 => "10111110010000001111100101101001", 
    170 => "10111011101011011001001010100000", 
    171 => "10111110011011100110001101111010", 
    172 => "10111110101101101000011011110101", 
    173 => "00111101111001011001000101100011", 
    174 => "00111111001010011000111100010001", 
    175 => "00111110110111000100010100110010", 
    176 => "10111110010011100110101110011000", 
    177 => "00111110100001010110000011101001", 
    178 => "00111100101011110001100001100110", 
    179 => "00111110110000010011110000100101", 
    180 => "00111100100101010000111010100011", 
    181 => "00111110010010101000011110110110", 
    182 => "10111110100011000100111111111011", 
    183 => "10111110110100110000000000111000", 
    184 => "00111110101011111100000101110110", 
    185 => "10111110000100001110111111100000", 
    186 => "10111110011000110001111101001011", 
    187 => "10111110010001011100011000001111", 
    188 => "10111101100000000111000000001111", 
    189 => "00111111000100011101010101101001", 
    190 => "10111110101100110111100100111101", 
    191 => "00111110011000100000000011100110", 
    192 => "10111011110010010000000101001010", 
    193 => "10111111001011101110011000111000", 
    194 => "10111111000001101010111111110101", 
    195 => "00111110000010010001011100011111", 
    196 => "00111110101010011111010110000101", 
    197 => "00111110110010010011011011000010", 
    198 => "10111110101100101100111100011010", 
    199 => "00111110000101111000001100100011", 
    200 => "00111101101000011101000110111110", 
    201 => "00111101111110100111011110000111", 
    202 => "10111110101000000001010011100000", 
    203 => "10111110011001010011101000000011", 
    204 => "00111110100101111011110001010011", 
    205 => "10111110010110100000011000101010", 
    206 => "10111110001111010100001010011110", 
    207 => "00111101011111010000011101001101", 
    208 => "10111110000000111110001111010111", 
    209 => "00111110111011010010000110110000", 
    210 => "00111101101001111001011000100011", 
    211 => "10111110100001011000110001111100", 
    212 => "00111110110001111001000000110001", 
    213 => "00111101101001101010101101110100", 
    214 => "00111110000101000110001011000110", 
    215 => "00111110101010100000100001010011", 
    216 => "00111111001000010001101000001100", 
    217 => "00111101101011111001110001101101", 
    218 => "00111110001110101011011010011110", 
    219 => "10111110111010001011001100000101", 
    220 => "10111110110010100010000011010001", 
    221 => "00111101100011011110111100100111", 
    222 => "00111110011000110100110011101111", 
    223 => "10111101101111001100010001100011", 
    224 => "00111110001110110110001100010001", 
    225 => "00111110010010010011111111001010", 
    226 => "10111110010110111000111110010000", 
    227 => "10111110100101101100110111000101", 
    228 => "00111110111100111100110101111001", 
    229 => "00111101110101101110010001011101", 
    230 => "10111110001111101011011000101101", 
    231 => "00111100110010011111010011011001", 
    232 => "00111110000011011011111110000110", 
    233 => "10111110100011001011001111101111", 
    234 => "10111110011001000101011111000100", 
    235 => "10111110011001010010010111101001", 
    236 => "00111101001000010111110101001010", 
    237 => "00111101100100000110101100111101", 
    238 => "10111101100100101011100001010111", 
    239 => "00111110001001010110000010010010", 
    240 => "10111110100011110000111010001010", 
    241 => "10111110011111111100110000000011", 
    242 => "00111110110011111011111011100001", 
    243 => "10111110100111010110110101010101", 
    244 => "00111101001100010011100010000010", 
    245 => "10111101111000110001011101000001", 
    246 => "10111110000001111111010000101100", 
    247 => "10111110111011101000100011101100", 
    248 => "10111110110101101100111101110110", 
    249 => "00111110000010010110101010011101", 
    250 => "00111101011111011100111100111010", 
    251 => "00111110001111000010110000111000", 
    252 => "10111110101000110011110101110100", 
    253 => "00111110101010100100011010010011", 
    254 => "00111110100010111111100101111100", 
    255 => "10111100000111010011011001010100", 
    256 => "10111101111001100110000001101111", 
    257 => "00111110101001100110100001111110", 
    258 => "00111110111110111111111111010100", 
    259 => "10111101000101001010101100111010", 
    260 => "00111110010100110011001111100001", 
    261 => "00111110100000100111110001000100", 
    262 => "10111110011110000011110111100000", 
    263 => "00111110000001100100011110000100", 
    264 => "00111110101101111111010001111011", 
    265 => "10111110000010101000100000010110", 
    266 => "00111110001001001111000111101000", 
    267 => "10111111000101110110101011100111", 
    268 => "00111110000000000101001011111100", 
    269 => "00111110100010011101001010111111", 
    270 => "00111110101000111001000000001100", 
    271 => "10111100101101001100100100001111", 
    272 => "00111101010111010111100111101111", 
    273 => "00111101111100111001111000011011", 
    274 => "10111110101100010110101111011111", 
    275 => "00111101101100010010000010100111", 
    276 => "00111110000000100111101111001010", 
    277 => "00111110011100100101000100000000", 
    278 => "00111101110000000010000000101011", 
    279 => "00111110010100001010010111011011", 
    280 => "00111101110100111011100010101001", 
    281 => "10111110110000100111010110011010", 
    282 => "00111110010010101110110001101011", 
    283 => "00111110111010110010001000010000", 
    284 => "00111110000111110100000010000110", 
    285 => "10111110100001010011110100111100", 
    286 => "10111110011010001010001010111110", 
    287 => "10111101110010110010010101111111", 
    288 => "10111110110111111000100100110011", 
    289 => "00111101110010011000000010011100", 
    290 => "00111110100110010001100000001000", 
    291 => "10111101101111111011001111010101", 
    292 => "00111100101101110110010001010010", 
    293 => "00111111000001011011111110101100", 
    294 => "00111110000110010100011100001100", 
    295 => "00111101101110111101111000011010", 
    296 => "10111100110000100101111101001110", 
    297 => "10111110010111111110010100110100", 
    298 => "10111110110101010001111100011101", 
    299 => "10111110011111110011111101001011" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity mnist_ip2Weights is
    generic (
        DataWidth : INTEGER := 32;
        AddressRange : INTEGER := 300;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of mnist_ip2Weights is
    component mnist_ip2Weights_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    mnist_ip2Weights_rom_U :  component mnist_ip2Weights_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


